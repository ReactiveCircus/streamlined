name: CI

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  assemble:
    name: Assemble
    runs-on: ubuntu-latest
    env:
      CI: true
      JAVA_TOOL_OPTIONS: -Xmx4g
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false -Dkotlin.compiler.execution.strategy=in-process
      TERM: dumb
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      STREAMLINED_KEY_PASSWORD: ${{ secrets.STREAMLINED_KEY_PASSWORD }}
      STREAMLINED_STORE_PASSWORD: ${{ secrets.STREAMLINED_STORE_PASSWORD }}
      NEWS_API_DEV_API_KEY: ${{ secrets.NEWS_API_DEV_API_KEY }}
      NEWS_API_PROD_API_KEY: ${{ secrets.NEWS_API_PROD_API_KEY }}
      STREAMLINED_BUGSNAG_DEV_API_KEY: ${{ secrets.STREAMLINED_BUGSNAG_DEV_API_KEY }}
      STREAMLINED_BUGSNAG_PROD_API_KEY: ${{ secrets.STREAMLINED_BUGSNAG_PROD_API_KEY }}

    steps:
      - uses: actions/checkout@v2

      - uses: gradle/wrapper-validation-action@v1

      - uses: actions/setup-java@v1
        with:
          java-version: 14

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: assemble-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/LibraryDependencies.kt') }}-${{ hashFiles('**/buildSrc/buildDependencies.gradle') }}

      - name: Export environment variables
        run: |
          echo "::set-env name=BUILD_NUMBER::$GITHUB_RUN_NUMBER"

      - name: Decrypt secrets
        run: |
          mkdir -p app/src/prod
          openssl enc -aes-256-cbc -md sha512 -pbkdf2 -iter 100000 -salt -d -in secrets/streamlined.aes -out secrets/streamlined.keystore -k $ENCRYPTION_KEY
          openssl enc -aes-256-cbc -md sha512 -pbkdf2 -iter 100000 -salt -d -in secrets/google-services-prod.aes -out app/src/prod/google-services.json -k $ENCRYPTION_KEY

      - name: Assemble signed release App Bundle
        run: |
          ./gradlew app:bundleProdRelease

      - name: Cleanup secrets
        if: always()
        run: |
          rm -f secrets/streamlined.keystore
          rm -f app/src/prod/google-services.json

      - name: Upload build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: build-outputs
          path: app/build/outputs

  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    env:
      CI: true
      JAVA_TOOL_OPTIONS: -Xmx4g
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false -Dkotlin.compiler.execution.strategy=in-process
      TERM: dumb
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}

    steps:
      - uses: actions/checkout@v2

      - uses: gradle/wrapper-validation-action@v1

      - uses: actions/setup-java@v1
        with:
          java-version: 14

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: unit-tests-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/LibraryDependencies.kt') }}-${{ hashFiles('**/buildSrc/buildDependencies.gradle') }}

      - name: Decrypt secrets
        run: |
          mkdir -p app/src/dev
          mkdir -p app/src/prod
          openssl enc -aes-256-cbc -md sha512 -pbkdf2 -iter 100000 -salt -d -in secrets/google-services-dev.aes -out app/src/dev/google-services.json -k $ENCRYPTION_KEY
          openssl enc -aes-256-cbc -md sha512 -pbkdf2 -iter 100000 -salt -d -in secrets/google-services-prod.aes -out app/src/prod/google-services.json -k $ENCRYPTION_KEY

      - name: Run unit tests
        run: |
          ./gradlew test -PslimTests

      - name: Copy test results
        if: always()
        run: |
          mkdir -p junit
          find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} junit/ \;

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: junit-results
          path: junit

      - name: Cleanup secrets
        if: always()
        run: |
          rm -f app/src/dev/google-services.json
          rm -f app/src/prod/google-services.json

  static-analysis:
    name: Static analysis
    runs-on: ubuntu-latest
    env:
      CI: true
      JAVA_TOOL_OPTIONS: -Xmx4g
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false -Dkotlin.compiler.execution.strategy=in-process
      TERM: dumb
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}

    steps:
      - uses: actions/checkout@v2

      - uses: gradle/wrapper-validation-action@v1

      - uses: actions/setup-java@v1
        with:
          java-version: 14

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: static-analysis-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/LibraryDependencies.kt') }}-${{ hashFiles('**/buildSrc/buildDependencies.gradle') }}

      - name: Decrypt secrets
        run: |
          mkdir -p app/src/dev
          mkdir -p app/src/prod
          openssl enc -aes-256-cbc -md sha512 -pbkdf2 -iter 100000 -salt -d -in secrets/google-services-dev.aes -out app/src/dev/google-services.json -k $ENCRYPTION_KEY
          openssl enc -aes-256-cbc -md sha512 -pbkdf2 -iter 100000 -salt -d -in secrets/google-services-prod.aes -out app/src/prod/google-services.json -k $ENCRYPTION_KEY

      - name: Run detekt and Android Lint
        run: |
          ./gradlew detekt app:lintProdRelease

      - name: Cleanup secrets
        if: always()
        run: |
          rm -f app/src/dev/google-services.json
          rm -f app/src/prod/google-services.json

  instrumented-tests:
    name: Instrumented tests
    runs-on: macos-latest
    timeout-minutes: 25
    env:
      CI: true
      JAVA_TOOL_OPTIONS: -Xmx4g
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false -Dkotlin.compiler.execution.strategy=in-process
      TERM: dumb

    steps:
      - uses: actions/checkout@v2

      - uses: gradle/wrapper-validation-action@v1

      - uses: actions/setup-java@v1
        with:
          java-version: 14

      - name: Clean cache
        run: mv ~/.gradle/caches ~/.gradle/.invalid_caches

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: instrumented-tests-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/LibraryDependencies.kt') }}-${{ hashFiles('**/buildSrc/buildDependencies.gradle') }}

      - name: Run Android instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 23
          arch: x86
          profile: Nexus 5X
          script: ./gradlew app:connectedMockDebugAndroidTest connectedDebugAndroidTest

  publish-to-play-store:
    name: Publish to Play Store
    needs: [assemble, unit-tests, static-analysis, instrumented-tests]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    env:
      CI: true
      JAVA_TOOL_OPTIONS: -Xmx4g
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dkotlin.incremental=false -Dkotlin.compiler.execution.strategy=in-process
      TERM: dumb
      ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
      STREAMLINED_BUGSNAG_PROD_API_KEY: ${{ secrets.STREAMLINED_BUGSNAG_PROD_API_KEY }}
      APP_ID: io.github.reactivecircus.streamlined

    steps:
      - uses: actions/checkout@v2

      - uses: gradle/wrapper-validation-action@v1

      - uses: actions/setup-java@v1
        with:
          java-version: 14

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: publish-to-play-store-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/LibraryDependencies.kt') }}-${{ hashFiles('**/buildSrc/buildDependencies.gradle') }}

      - name: Export environment variables
        run: |
          echo "::set-env name=BUILD_NUMBER::$GITHUB_RUN_NUMBER"
          # TODO get versionCode from task
          echo "::set-env name=VERSION_CODE::1
          # TODO get versionName from task
          echo "::set-env name=VERSION_NAME::1.0

      - name: Decrypt secrets
        run: |
          openssl enc -aes-256-cbc -md sha512 -pbkdf2 -iter 100000 -salt -d -in secrets/play-api.aes -out secrets/play-api.json -k $ENCRYPTION_KEY

      - name: Download build artifacts
        uses: actions/download-artifact@v1
        with:
          name: build-outputs
          path: app/build/outputs

      - name: Upload mapping file to Bugsnag
        run: |
          curl --http1.1 https://upload.bugsnag.com/ \
            -F proguard=@app/build/outputs/mapping/prodRelease/mapping.txt \
            -F apiKey=$STREAMLINED_BUGSNAG_PROD_API_KEY \
            -F appId=$APP_ID \
            -F versionCode=$VERSION_CODE \
            -F versionName=$VERSION_NAME \
            -F overwrite=true

      - name: Publish release App Bundle to Play Store
        run: |
          ./gradlew publishBundle --artifact-dir app/build/outputs/bundle/prodRelease

      - name: Cleanup secrets
        if: always()
        run: |
          rm -f secrets/play-api.json
